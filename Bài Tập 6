#include <iostream>
#include <vector>
#include <utility> // De su dung std::pair
#include <algorithm> // De su dung std::equal

// Ham dem so lan xuat hien cua mang A trong mang B
// @param A: Mang con can tim
// @param B: Mang cha de tim kiem
// @return: Tra ve so lan xuat hien va mot vector chua cac chi so bat dau
std::pair<int, std::vector<int>> count_occurrences(const std::vector<int>& A, const std::vector<int>& B) {
    int count = 0; // Bien dem so lan xuat hien
    std::vector<int> positions; // Vector luu cac chi so bat dau
    int len_A = A.size(); // Kich thuoc cua mang A
    int len_B = B.size(); // Kich thuoc cua mang B

    // Neu mang A rong, tra ve 0 lan xuat hien tai chi so 0
    if (len_A == 0) {
        return {0, positions};
    }

    // Neu mang B rong hoac A lon hon B, khong the tim thay A trong B
    if (len_B == 0 || len_A > len_B) {
        return {0, positions};
    }

    // Lap qua tung chi so trong mang B
    for (int i = 0; i <= len_B - len_A; ++i) {
        // Kiem tra xem mang A co xuat hien tai chi so i khong
        if (std::equal(B.begin() + i, B.begin() + i + len_A, A.begin())) {
            count++; // Tang bien dem
            positions.push_back(i); // Luu chi so bat dau
        }
    }

    return {count, positions}; // Tra ve ket qua
}

// Ham chinh de chay chuong trinh
int main() {
    int n, m;

    // Nhap kich thuoc mang A
    std::cout << "Nhap so luong phan tu cua mang A: ";
    std::cin >> n;
    std::vector<int> A(n); // Khoi tao mang A voi kich thuoc n

    // Nhap cac phan tu cua mang A
    std::cout << "Nhap cac phan tu cua mang A: ";
    for (int i = 0; i < n; ++i) {
        std::cin >> A[i];
    }

    // Nhap kich thuoc mang B
    std::cout << "Nhap so luong phan tu cua mang B: ";
    std::cin >> m;
    std::vector<int> B(m); // Khoi tao mang B voi kich thuoc m

    // Nhap cac phan tu cua mang B
    std::cout << "Nhap cac phan tu cua mang B: ";
    for (int i = 0; i < m; ++i) {
        std::cin >> B[i];
    }

    // Goi ham dem so lan xuat hien va luu ket qua
    auto result = count_occurrences(A, B);
    
    // Hien thi ket qua
    std::cout << "So lan xuat hien cua A trong B: " << result.first << std::endl;
    std::cout << "Cac chi so bat dau: ";
    for (int pos : result.second) {
        std::cout << pos << " ";
    }
    std::cout << std::endl;

    return 0; // Ket thuc chuong trinh
}
